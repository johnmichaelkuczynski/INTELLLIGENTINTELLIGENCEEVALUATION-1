import React from 'react';
import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Download, Trophy, FileText } from 'lucide-react';

interface DocumentComparisonResult {
  winnerDocument: 'A' | 'B';
  documentAScore: number;
  documentBScore: number;
  comparisonAnalysis: string;
  detailedBreakdown: string;
}

interface DocumentComparisonModalProps {
  isOpen: boolean;
  onClose: () => void;
  result?: DocumentComparisonResult;
  isLoading: boolean;
}

export function DocumentComparisonModal({ 
  isOpen, 
  onClose, 
  result, 
  isLoading 
}: DocumentComparisonModalProps) {
  const handleDownload = () => {
    if (!result) return;
    
    const content = `DOCUMENT COMPARISON RESULTS
================================

WINNER: Document ${result.winnerDocument}

SCORES:
Document A: ${result.documentAScore}/100
Document B: ${result.documentBScore}/100

COMPARISON ANALYSIS:
${result.comparisonAnalysis}

DETAILED BREAKDOWN:
${result.detailedBreakdown}

Generated by Intelligence Analysis Tool
`;
    
    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `document-comparison-${Date.now()}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <Trophy className="h-5 w-5 text-yellow-500" />
            Document Comparison Results
          </DialogTitle>
        </DialogHeader>

        {isLoading ? (
          <div className="flex flex-col items-center justify-center py-12">
            <div className="animate-spin rounded-full h-16 w-16 border-4 border-blue-500 border-t-transparent mb-4"></div>
            <p className="text-gray-600">Comparing documents...</p>
          </div>
        ) : result ? (
          <div className="space-y-6">
            {/* Winner Announcement */}
            <Card className="border-2 border-yellow-400 bg-yellow-50">
              <CardHeader className="text-center">
                <CardTitle className="flex items-center justify-center gap-2 text-2xl">
                  <Trophy className="h-6 w-6 text-yellow-600" />
                  Winner: Document {result.winnerDocument}
                </CardTitle>
              </CardHeader>
            </Card>

            {/* Score Comparison */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <Card className={`${result.winnerDocument === 'A' ? 'border-green-500 bg-green-50' : 'border-gray-300'}`}>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <FileText className="h-5 w-5" />
                    Document A
                    {result.winnerDocument === 'A' && (
                      <Badge variant="secondary" className="bg-green-100 text-green-800">
                        Winner
                      </Badge>
                    )}
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-3xl font-bold text-center">
                    {result.documentAScore}/100
                  </div>
                </CardContent>
              </Card>

              <Card className={`${result.winnerDocument === 'B' ? 'border-green-500 bg-green-50' : 'border-gray-300'}`}>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <FileText className="h-5 w-5" />
                    Document B
                    {result.winnerDocument === 'B' && (
                      <Badge variant="secondary" className="bg-green-100 text-green-800">
                        Winner
                      </Badge>
                    )}
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-3xl font-bold text-center">
                    {result.documentBScore}/100
                  </div>
                </CardContent>
              </Card>
            </div>

            {/* Comparison Analysis */}
            <Card>
              <CardHeader>
                <CardTitle>Comparison Analysis</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="prose max-w-none">
                  <p className="text-gray-700 whitespace-pre-wrap">{result.comparisonAnalysis}</p>
                </div>
              </CardContent>
            </Card>

            {/* Detailed Breakdown */}
            <Card>
              <CardHeader>
                <CardTitle>Detailed Breakdown</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="prose max-w-none">
                  <div className="text-gray-700 whitespace-pre-wrap font-mono text-sm bg-gray-50 p-4 rounded-lg">
                    {result.detailedBreakdown}
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Download Button */}
            <div className="flex justify-center">
              <Button onClick={handleDownload} className="flex items-center gap-2">
                <Download className="h-4 w-4" />
                Download Comparison Report
              </Button>
            </div>
          </div>
        ) : (
          <div className="text-center py-8">
            <p className="text-gray-500">No comparison results to display</p>
          </div>
        )}
      </DialogContent>
    </Dialog>
  );
}