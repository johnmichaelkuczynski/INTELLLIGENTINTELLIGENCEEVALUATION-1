import sgMail from '@sendgrid/mail';
import fs from 'fs';
import path from 'path';

// Log SendGrid configuration
console.log('SendGrid configuration status:');
console.log('- API Key present:', !!process.env.SENDGRID_API_KEY);
console.log('- Verified sender:', process.env.SENDGRID_VERIFIED_SENDER);

// Setup SendGrid with API key
if (process.env.SENDGRID_API_KEY) {
  sgMail.setApiKey(process.env.SENDGRID_API_KEY);
  console.log('SendGrid initialized successfully');
} else {
  console.error('WARNING: SendGrid API key missing - emails will not send!');
}

interface SimpleEmailRequest {
  recipientEmail: string;
  senderEmail?: string;
  senderName?: string;
  subject: string;
  content: string;
}

/**
 * Send email directly using SendGrid
 */
async function sendViaAPI(emailData: SimpleEmailRequest, htmlContent: string): Promise<{success: boolean, message: string}> {
  try {
    // Setup the email
    const msg = {
      to: emailData.recipientEmail,
      from: {
        email: process.env.SENDGRID_VERIFIED_SENDER || 'noreply@example.com',
        name: emailData.senderName || 'Intelligence Analysis Platform'
      },
      subject: emailData.subject,
      text: emailData.content,
      html: htmlContent
    };

    // Send the email
    console.log(`Sending email via SendGrid to: ${emailData.recipientEmail}`);
    const [response] = await sgMail.send(msg);
    
    console.log(`SendGrid response: Status ${response.statusCode}`);
    
    if (response.statusCode >= 200 && response.statusCode < 300) {
      return {
        success: true,
        message: `Email sent successfully to ${emailData.recipientEmail}`
      };
    } else {
      return {
        success: false,
        message: `SendGrid returned status code ${response.statusCode}`
      };
    }
  } catch (error: any) {
    console.error('SendGrid API error:', error);
    
    if (error.response) {
      console.error('SendGrid error details:', error.response.body);
    }
    
    // Create a more detailed error message
    let errorDetails = error.message || "Unknown error";
    if (error.response && error.response.body) {
      try {
        const body = typeof error.response.body === 'string' 
          ? JSON.parse(error.response.body) 
          : error.response.body;
        
        if (body.errors && body.errors.length > 0) {
          errorDetails = body.errors.map((e: any) => e.message).join(', ');
        }
      } catch (parseError) {
        console.error('Error parsing SendGrid response:', parseError);
      }
    }
    
    return {
      success: false,
      message: `Failed to send email: ${errorDetails}`
    };
  }
}

/**
 * Send a simple plain text report via email using SendGrid
 * @param emailData Email data including recipient, subject and content
 * @returns Success status and message
 */
export async function sendSimpleEmail(emailData: SimpleEmailRequest): Promise<{success: boolean, message: string}> {
  // Validate required environment variables
  if (!process.env.SENDGRID_API_KEY) {
    return {
      success: false,
      message: "SendGrid API key not configured. Please ensure the SENDGRID_API_KEY is properly set in environment variables."
    };
  }

  if (!process.env.SENDGRID_VERIFIED_SENDER) {
    return {
      success: false,
      message: "SendGrid verified sender not configured. Please add SENDGRID_VERIFIED_SENDER to environment variables."
    };
  }

  // Format the HTML content with a nice template
  const htmlContent = `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Intelligence Analysis Report</title>
    </head>
    <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 800px; margin: 0 auto; padding: 20px;">
      <div style="border-bottom: 3px solid #2563eb; padding-bottom: 20px; margin-bottom: 20px;">
        <h1 style="color: #2563eb; font-size: 24px; margin-bottom: 10px;">Intelligence Analysis Report</h1>
        <p style="color: #6b7280; margin: 0;">Generated on ${new Date().toLocaleString()}</p>
      </div>
      
      <div style="background-color: #f3f4f6; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
        <h2 style="color: #1e40af; font-size: 18px; margin-top: 0; margin-bottom: 15px;">Report Contents</h2>
        <div style="white-space: pre-wrap; font-family: monospace; font-size: 14px; line-height: 1.6; background: white; padding: 15px; border-radius: 6px; border: 1px solid #e5e7eb;">
          ${emailData.content.replace(/\n/g, '<br>')}
        </div>
      </div>
      
      <div style="background-color: #edf3ff; padding: 15px; border-radius: 8px; margin-top: 30px;">
        <p style="margin: 0; color: #3b5183; font-size: 14px;">
          This report was generated by the Intelligence Analysis Platform.
          <br>
          The analysis is based on direct pass-through to multiple AI models with no custom algorithms.
        </p>
      </div>
    </body>
    </html>
  `;

  // Send via SendGrid API
  return sendViaAPI(emailData, htmlContent);
}